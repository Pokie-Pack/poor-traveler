{"version":3,"sources":["components/Step1/index.js","components/Step2/index.js","components/Step3/index.js","components/Step4/index.js","pages/Home.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["Step1","props","class","onClick","nextStep","Step2","previousStep","Step3","type","Step4","Home","className","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","role","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","data","Auth","console","log","handleChange","target","name","value","to","onSubmit","htmlFor","placeholder","id","onChange","Signup","addUser","firstName","lastName","Nav","loggedIn","href","logout","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cf6396c8.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Step1(props) {\n  return (\n    <div class=\"container\">\n      <h1> Step 1: Click your preferred CLIMATE please</h1>\n      <p1>\n        <buttonWarm onClick={props.nextStep}>WARM 🔥</buttonWarm>\n      </p1>\n      <p2>\n        <buttonChilly onClick={props.nextStep}>CHILLY 🧊</buttonChilly>\n      </p2>\n\n      <p3>\n        <button onClick={props.nextStep}>Next Step</button>\n      </p3>\n    </div>\n  );\n}\n\nexport default Step1;\n","import React from \"react\";\n\nfunction Step2(props) {\n  return (\n    <div>\n      <h1> Step 2: What is your preferred TERRAIN?</h1>\n      <p>\n        <button onClick={props.nextStep}>BEACH</button>\n      </p>\n      <p>\n        <button onClick={props.nextStep}>INLAND</button>\n      </p>\n      <p>\n        <button onClick={props.previousStep}>Previous Step</button>\n      </p>\n      <p>\n        <button onClick={props.nextStep}>Next Step</button>\n      </p>\n    </div>\n  );\n}\n\nexport default Step2;\n","import React from \"react\";\n\nfunction Step3(props) {\n  return (\n    <div>\n      <h1> Step 3: Preferred transportation?</h1>\n      <p>\n        <button onClick={props.nextStep} type=\"checkbox\">\n          AIR\n        </button>\n      </p>\n      <p>\n        <button onClick={props.nextStep}>CAR</button>\n      </p>\n      <p>\n        <button onClick={props.nextStep}>CRUISE</button>\n      </p>\n      <p>\n        <button onClick={props.nextStep}>RV</button>\n      </p>\n      <p>\n        <button onClick={props.previousStep}>Previous Step</button>\n      </p>\n      <p>\n        <button onClick={props.nextStep}>Next Step</button>\n      </p>\n    </div>\n  );\n}\n\nexport default Step3;\n","import React from \"react\";\n\nfunction Step4(props) {\n  return (\n    <div>\n      <h1> Step 4: Preferred place to stay?</h1>\n      <p>\n        <button onClick={props.nextStep}>HOTEL</button>\n      </p>\n      <p>\n        <button onClick={props.nextStep}>HOSTEL</button>\n      </p>\n      <p>\n        <button onClick={props.nextStep}>B\\&B</button>\n      </p>\n      <p>\n        <button onClick={props.previousStep}>Previous Step</button>\n      </p>\n      <p>\n        <button onClick={props.nextStep}>Next Step</button>\n      </p>\n    </div>\n  );\n}\n\nexport default Step4;\n","import React from \"react\";\n// import Jumbotron from \"../components/Jumbotron\";\nimport StepWizard from \"react-step-wizard\";\nimport Step1 from \"../components/Step1\";\nimport Step2 from \"../components/Step2\";\nimport Step3 from \"../components/Step3\";\nimport Step4 from \"../components/Step4\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      {/* <Jumbotron>\n        <h1>Starter Stack</h1>\n        <p>We are here to be awesome</p>\n     </Jumbotron> */}\n      <StepWizard>\n        <Step1 />\n        <Step2 />\n        <Step3 />\n        <Step4 />\n      </StepWizard>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\"></span>\n          Smart Poor travelpackage\n        </Link>\n      </h1>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}